<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.dong.boardMapper">
	<!-- 로그인 처리를 위한 SQL -->
	<select id="login" parameterType="java.util.Map"
		resultType="java.util.Map">
		select id, name
		from springuser
		where id=#{id} and password=#{password}
	</select>

	<!-- 전체목록 -->
	<!--
	<select id="list" resultType="BoardDTO">
		select *
		from board
		where del = 0
		order by bno desc
	</select>
	 -->
	
	
	
	
	<!-- 공지사항 상세 글 조회  -->
	<select id="boardDetail" parameterType="java.lang.Integer" resultType="BoardDTO">
		select *
		from board
		where board_no = ${board_no}
	</select>
	
	<!-- 공지사항 조회수 1 증가하는 SQL -->
	<update id="boardUpdateReadCnt" parameterType="java.lang.Integer">
		update board
		set board_readcnt = board_readcnt + 1
		where board_no = #{board_no}
	</update>
	
	<!-- 리뷰 상세 글 조회 -->
	<select id="reviewDetail" parameterType="java.lang.Integer" resultType="ReviewDTO">
		select *
		from review
		where review_no = ${review_no}
	</select>
	
	<!-- 리뷰 조회수 1 증가하는 SQL -->
	<update id="reviewUpdateReadCnt" parameterType="java.lang.Integer">
		update review
		set review_readcnt = review_readcnt + 1
		where review_no = #{review_no}
	</update>
	
	<!-- Q&A 상세 글 조회 -->
	<select id="qnaDetail" parameterType="java.lang.Integer" resultType="QADTO">
		select *
		from qa
		where qa_no = #{qa_no}
	</select>
	
	<!-- Q&A 글 작성하는 SQL -->
	<insert id="qnaRegister" parameterType="QADTO">
		insert into qa(qa_no, product_group_id_fk2, userid, qa_content, qa_secret, qa_date, qa_reply)
		values (#{qa_no}, #{product_group_id_fk2}, #{userid}, #{qa_content}, ${qa_content}, curdate(), #{qa_reply})
		
	</insert>
	
	<!-- Q&A 글 수정하는 SQL -->
	<update id="qnaUpdate" parameterType="QADTO">
		update qa
		set
		qa_content=#{qa_content}, qa_secret=#{qa_secret} , qa_date=curdate( )
		where qa_no = #{qa_no}
	</update>
	
	<!-- Q&A 글 삭제하는 SQL -->
	<update id="qnaDelete" parameterType="java.lang.Integer">
		delete from qa
		where qa_no = #{qa_no}
	</update>
	

	



	<!-- 게시글번호에 해당하는 댓글 조회하는 SQL -->
	<select id="detail1" parameterType="java.lang.Integer"
		resultType="BoardReply">
		select *
		from board_reply
		where bno = #{bno}
	</select>
	
	<!-- 댓글쓰기 -->
	<insert id="reply" parameterType="BoardReply">
		insert into
		board_reply(rewriter, rememo, redate, bno)
		values (#{rewriter},
		#{rememo}, curdate(), #{bno})
	</insert>

	<!-- 해당 댓글 조회 SQL -->
	<select id="detailReply" parameterType="BoardReply"
		resultType="BoardReply">
		select *
		from board_reply
		where reno = #{reno}
	</select>
	
	<!-- 댓글수정 -->
	<update id="replyupdate" parameterType="BoardReply">
		update board_reply
		set rewriter = #{rewriter}, rememo = #{rememo}, redate = curdate()
		where bno = #{bno} and reno = #{reno}
	</update>

	<delete id="replyDelete" parameterType="java.lang.Integer">
		delete from board_reply
		where reno = #{reno}
	</delete>

	<!-- 총 레코드 수 반환 -->
	<select id="totalRecord" resultType="java.lang.Integer">
		select count(*)
		from board
		where del = 0
	</select>

	<!-- 조회 시 반영을 위해 -->
	<select id="list" resultType="boardDTO">
		SELECT *
		FROM board
		where del=0
		ORDER BY bno DESC
		LIMIT #{start}, #{pageSIZE}
	</select>



</mapper>
  
  
  
  
  
  
  
  
  